{
	"info": {
		"_postman_id": "b7336edd-88f2-4e0d-9ca8-d5fda36c752a",
		"name": "Sansera_API'S_negative",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26749259"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Loginfortoken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var res = JSON.parse(responseBody);\r",
									"pm.environment.set(\"token\", res.message.accessToken);\r",
									"pm.environment.set(\"userId\", res.message.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"op\": \"login\",\r\n    \"emp_id\": \"emp000\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"\r",
									"    pm.response.to.have.status(404);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"var json=JSON.parse(responseBody)\r",
									"pm.test(\"valiadte error message for invalid user \",()=>{\r",
									"pm.expect(json.message).to.eql(\"User Not found\")\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"op\": \"login\",\r\n    \"emp_id\": \"emp0001\",\r\n    \"password\": \"mypassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"op\":\"logout\",\r\n    \"user_id\": \"{{userId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "fetch_member_by_role",
					"item": [
						{
							"name": "miss-role-field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when role not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"org-service:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"fetch_member_by_role\", \r\n\r\n \"parent_suborg_id\":\"6287907d55d104aab2fcc6b9\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/org-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"org-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-parent-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when parent not given\",()=>{\r",
											"pm.expect(json.message).to.eql(\"org-service:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"fetch_member_by_role\", \r\n \"role\": \"FORK OPERATOR\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/org-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"org-service"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Suppliers",
			"item": [
				{
					"name": "get_suppliers",
					"item": [
						{
							"name": "miss-opcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when stage name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"supplier:invalid-opcode\")\r",
											"});\r",
											"\r",
											"var res = JSON.parse(responseBody);\r",
											"pm.environment.set(\"supplier_id\", res.message[0]._id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/supplier",
									"host": [
										"{{url}}"
									],
									"path": [
										"supplier"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Raw_Materials",
			"item": [
				{
					"name": "add_raw_materials",
					"item": [
						{
							"name": "miss-material-filed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \"supplier_id\": \"{{supplier_id}}\",\r\n \"material_code\": \"M1\",\r\n\r\n \"heat_num\": \"AL4858\",\r\n \"type\": \"Steel\",\r\n \"total_weight\": 1200,\r\n\"unit_num\":\"{{unit_num}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-material-code-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \"supplier_id\": \"{{supplier_id}}\",\r\n\r\n\r\n \"heat_num\": \"AL4858\",\r\n \"type\": \"Steel\",\r\n \"total_weight\": 1200,\r\n\"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-supplier-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \r\n \"material_code\": \"M1\",\r\n\r\n \"heat_num\": \"AL4858\",\r\n \"type\": \"Steel\",\r\n \"total_weight\": 1200,\r\n\"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-heat-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \"supplier_id\": \"{{supplier_id}}\",\r\n \"material_code\": \"M1\",\r\n\r\n \"type\": \"Steel\",\r\n \"total_weight\": 1200,\r\n\"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-type-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \"supplier_id\": \"{{supplier_id}}\",\r\n \"material_code\": \"M1\",\r\n\r\n \"heat_num\": \"AL4858\",\r\n\r\n \"total_weight\": 1200,\r\n\"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-total-weight-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \"supplier_id\": \"{{supplier_id}}\",\r\n \"material_code\": \"M1\",\r\n\r\n \"heat_num\": \"AL4858\",\r\n \"type\": \"Steel\",\r\n\r\n\"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when material grade not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_raw_material\",\r\n \"supplier_id\": \"{{supplier_id}}\",\r\n \"material_code\": \"M1\",\r\n\r\n \"heat_num\": \"AL4858\",\r\n \"type\": \"Steel\",\r\n \"total_weight\": 1200\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update_material_fifo",
					"item": [
						{
							"name": "miss-batch-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when batch number not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"op\": \"update_material_fifo\",\r\n\r\n\"unit_num\":\"{{unit_num}}\",\r\n \"fifo\": [ \r\n\r\n]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-fifo-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when fifo not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"op\": \"update_material_fifo\",\r\n\r\n\"unit_num\":\"{{unit_num}}\"\r\n \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"op\": \"update_material_fifo\",\r\n\r\n\r\n \"fifo\": [ \r\n\r\n]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update_raw_materials",
					"item": [
						{
							"name": "miss-certificate-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"\r",
											"    pm.response.to.have.status(403);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when certificate not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"inventory.update_inventory:certificate-missing\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"op\": \"update_raw_material\",\r\n    \"batch_num\": \"{{batch_num}}\",\r\n    \"unit_num\":\"{{unit_num}}\",\r\n    \"status\": \"APPROVED\"\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-batch-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when batch num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"op\": \"update_raw_material\",\r\n\r\n    \"unit_num\":\"{{unit_num}}\",\r\n    \"status\": \"APPROVED\"\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"inventory:update_inventory:unit-not-found\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"op\": \"update_raw_material\",\r\n    \"batch_num\": \"{{batch_num}}\",\r\n \r\n    \"status\": \"APPROVED\"\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_batch_details",
					"item": [
						{
							"name": "miss-unit-number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_batch_details\",\r\n \"batch_num\": \"{{batch_num}}\"\r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-batch-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when batch num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_batch_details\"\r\n \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_raw_materials_by_type",
					"item": [
						{
							"name": "miss-type-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when type not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_type\",\r\n \r\n \"unit_num\": \"unit_num\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when type not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_type\"\r\n \r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_raw_materials_by_supplier",
					"item": [
						{
							"name": "miss-supplier-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when supplier id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_supplier\",\r\n \r\n \"unit_num\": \"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-uint-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_supplier\"\r\n \r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_raw_material_by_heat_num",
					"item": [
						{
							"name": "miss-heat-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when heat num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n \"op\": \"list_raw_material_by_heat_num\",\r\n \r\n \"unit_num\": \"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_heat_num\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_raw_material_by_arrival_date",
					"item": [
						{
							"name": "miss-arrival-date-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when arrival date not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_arrival_date\",\r\n \r\n \"unit_num\": \"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_arrival_date\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "list_raw_material_by_status",
					"item": [
						{
							"name": "miss-status-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when Status not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_status\",\r\n \r\n \"unit_num\": \"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_raw_material_by_status\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_raw_material_by_material_item",
					"item": [
						{
							"name": "miss-batch-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when batch num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_next_raw_material_item\", \r\n \r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_next_raw_material_item\",\r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "pop_material",
					"item": [
						{
							"name": "miss-bundle-weight-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when bundle weight not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n \"op\": \"pop_material\", \r\n \"batch_num\": \"{{batch_num}}\",\r\n  \"unit_num\":\"{{unit_num}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n \"op\": \"pop_material\", \r\n \"batch_num\": \"{{batch_num}}\"\r\n\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-batch-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when bstch num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n \"op\": \"pop_material\", \r\n \r\n  \"unit_num\":\"{{unit_num}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_certificate",
					"item": [
						{
							"name": "miss-status-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when status not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_certificate\", \r\n \"batch_num\": \"{{batch_num}}\", \r\n \r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_certificate\", \r\n \"batch_num\": \"{{batch_num}}\"\r\n \r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-batch-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when batch num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_certificate\", \r\n\r\n \r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "remove_compartment",
					"item": [
						{
							"name": "miss-batch-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when batch-num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"remove_compartment\", \r\n \"batch_num\": \"{{batch_num}}\", \r\n \r\n \"removed_weight\": 200,\r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-removed-weight-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when removed weight  not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"remove_compartment\", \r\n \"batch_num\": \"{{batch_num}}\", \r\n \r\n \"removed_weight\": 200,\r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-weight-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when weight num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"raw_material:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"remove_compartment\", \r\n \"batch_num\": \"{{batch_num}}\", \r\n \r\n \"removed_weight\": 200,\r\n \"unit_num\":\"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/raw-materials",
									"host": [
										"{{url}}"
									],
									"path": [
										"raw-materials"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Forge Machine",
			"item": [
				{
					"name": "list_forge_machines",
					"item": [
						{
							"name": "miss-opcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when opcode not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"forge_machine:invalid-opcode\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n \"unit_num\": \"{{unit}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/forge-machine",
									"host": [
										"{{url}}"
									],
									"path": [
										"forge-machine"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "get_customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"\r",
									"    pm.response.to.have.status(422);\r",
									"\r",
									"});\r",
									"\r",
									"var json=JSON.parse(responseBody)\r",
									"pm.test(\"valiadte error message when opcode not given \",()=>{\r",
									"pm.expect(json.message).to.eql(\"customer:invalid-opcode\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/customer",
							"host": [
								"{{url}}"
							],
							"path": [
								"customer"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MQTT-Service",
			"item": [
				{
					"name": "list_topics",
					"item": [
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"mqtt-service:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"list_topics\"\r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/mqtt-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"mqtt-service"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_device",
					"item": [
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when status not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"mqtt-service:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_device\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/mqtt-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"mqtt-service"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Process-Line",
			"item": [
				{
					"name": "add_process",
					"item": [
						{
							"name": "miss-component-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when component_id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_process\",\r\n \"batch_num\": \"{{batch_num}}\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"forge_machine_id\": \"63ad94cc589165b9a1ce6af4\",\r\n\r\n \"component_id\": \"HSSC\",\r\n \"component_count\": \"4500\",\r\n \"component_weight\": 345\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-batch-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when component_id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_process\",\r\n\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"forge_machine_id\": \"63ad94cc589165b9a1ce6af4\",\r\n\r\n \"component_id\": \"HSSC\",\r\n \"component_count\": \"4500\",\r\n \"component_weight\": 345\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_process\",\r\n \"batch_num\": \"{{batch_num}}\",\r\n\r\n \"forge_machine_id\": \"63ad94cc589165b9a1ce6af4\",\r\n\r\n \"component_id\": \"HSSC\",\r\n \"component_count\": \"4500\",\r\n \"component_weight\": 345\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-forge-machine-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when forge machine id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_process\",\r\n \"batch_num\": \"{{batch_num}}\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n\r\n\r\n \"component_id\": \"HSSC\",\r\n \"component_count\": \"4500\",\r\n \"component_weight\": 345\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-component-count-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when component_count not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_process\",\r\n \"batch_num\": \"{{batch_num}}\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"forge_machine_id\": \"63ad94cc589165b9a1ce6af4\",\r\n\r\n \"component_id\": \"HSSC\",\r\n\r\n \"component_weight\": 345\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-component-weight-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when component_weight not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"add_process\",\r\n \"batch_num\": \"{{batch_num}}\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"forge_machine_id\": \"63ad94cc589165b9a1ce6af4\",\r\n\r\n \"component_id\": \"HSSC\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_process",
					"item": [
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_process\",\r\n \"process_name\": \"{{process}}\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when process  name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_process\"\r\n\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update_process",
					"item": [
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when process name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Shearing\",\r\n \"ok_end_billets_weight\": 90,\r\n \"ok_component\": 30,\r\n \"ok_bits_count\":10,\r\n \"ok_bits_weight\":100,\r\n \"hold_materials_weight\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \r\n \"stage_name\": \"Shearing\",\r\n \"ok_end_billets_weight\": 90,\r\n \"ok_component\": 30,\r\n \"ok_bits_count\":10,\r\n \"ok_bits_weight\":100,\r\n \"hold_materials_weight\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-stage-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when stage name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n\r\n \"ok_end_billets_weight\": 90,\r\n \"ok_component\": 30,\r\n \"ok_bits_count\":10,\r\n \"ok_bits_weight\":100,\r\n \"hold_materials_weight\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-ok-end-billets-weight-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when ok end billets weight not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Shearing\",\r\n\r\n \"ok_component\": 30,\r\n \"ok_bits_count\":10,\r\n \"ok_bits_weight\":100,\r\n \"hold_materials_weight\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-ok-component-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when ok component not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Shearing\",\r\n \"ok_end_billets_weight\": 90,\r\n\r\n \"ok_bits_count\":10,\r\n \"ok_bits_weight\":100,\r\n \"hold_materials_weight\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-ok-bits-count-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when ok bits count not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Shearing\",\r\n \"ok_end_billets_weight\": 90,\r\n \"ok_component\": 30,\r\n\r\n \"ok_bits_weight\":100,\r\n \"hold_materials_weight\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-hold-materials-weight-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when hold material weight not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Shearing\",\r\n \"ok_end_billets_weight\": 90,\r\n \"ok_component\": 30,\r\n \"ok_bits_count\":10,\r\n \"ok_bits_weight\":100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-ok-bits-weight-field",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_process\",\r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Shearing\",\r\n \"ok_end_billets_weight\": 90,\r\n \"ok_component\": 30,\r\n \"ok_bits_count\":10,\r\n  \"hold_materials_weight\": 10\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "push_element",
					"item": [
						{
							"name": "miss-stage-name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when stage name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"push_element\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"process_name\": \"{{process}}\",\r\n\r\n \"element_num\": \"Bin2\",\r\n \"element_id\": \"48-06-B7-1B\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"push_element\",\r\n\r\n \"process_name\": \"{{process}}\",\r\n\r\n \"element_num\": \"Bin2\",\r\n \"element_id\": \"48-06-B7-1B\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when process name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"push_element\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n\r\n \"element_num\": \"Bin2\",\r\n \"element_id\": \"48-06-B7-1B\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-element-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when element num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"push_element\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"process_name\": \"{{process}}\",\r\n\r\n\r\n \"element_id\": \"48-06-B7-1B\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-element-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message element id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"push_element\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"process_name\": \"{{process}}\",\r\n\r\n \"element_num\": \"Bin2\"\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_next_element",
					"item": [
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when process name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_next_element\", \r\n \r\n \"unit_num\":\"{{unit_num}}\",\r\n \"stage_name\": \"Billet punching\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when unit num not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n \"op\": \"get_next_element\", \n\n \"stage_name\": \"Billet punching\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-stage-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when stage num not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n \"op\": \"get_next_element\", \n \n \"unit_num\":\"{{unit_num}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_process_inputs",
					"item": [
						{
							"name": "miss-unit-num",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_process_inputs\"\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_stages",
					"item": [
						{
							"name": "miss-type-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when type not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\":\"get_stages\",\r\n\r\n \"unit_num\": \"{{unit_num}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when unit num not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\":\"get_stages\"\n\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "remove_element",
					"item": [
						{
							"name": "miss-element-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when element id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"remove_element\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \"process_name\": \"{{process}}\",\r\n \"stage_name\": \"Billet punching\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when unit name not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"remove_element\",\n \"unit_num\":\"{{unit_num}}\",\n \"process_name\": \"{{process}}\",\n \"stage_name\": \"Billet punching\"\n \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when processm aname not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"remove_element\",\n \"unit_num\":\"{{unit_num}}\",\n \"process_name\": \"{{process}}\",\n \"stage_name\": \"Billet punching\"\n \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-stage-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when stage name not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-line:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"remove_element\",\n \"unit_num\":\"{{unit_num}}\",\n \"process_name\": \"{{process}}\",\n \"stage_name\": \"Billet punching\"\n \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-line",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-line"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Process Consumption",
			"item": [
				{
					"name": "get-process-comsumption",
					"item": [
						{
							"name": "miss-stage-name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when stage name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"process-consumption:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"op\": \"get_process_consumption\",\r\n    \"process_name\": \"{{process}}\",\r\n    \"date\": \"2023-04-06\",\r\n    \r\n    \"unit_num\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-consumption",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-consumption"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when process name not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-consumption:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"op\": \"get_process_consumption\",\n    \"date\": \"2023-04-06\",\n    \n    \"unit_num\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-consumption",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-consumption"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-date-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when date not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-consumption:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"op\": \"get_process_consumption\",\n    \"process_name\": \"{{process}}\",\n\n    \n    \"unit_num\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-consumption",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-consumption"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when unit num not given \",()=>{",
											"pm.expect(json.message).to.eql(\"process-consumption:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"op\": \"get_process_consumption\",\n    \"process_name\": \"{{process}}\",\n    \"date\": \"2023-04-06\"\n    \n   \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/process-consumption",
									"host": [
										"{{url}}"
									],
									"path": [
										"process-consumption"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Operator Tasks",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "miss-resolver-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when resolver id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var res = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set(\"task_id\", res.message._id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"create\",\r\n \"process_name\": \"{{process}}\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n\r\n \"stage\": \"Billet punching\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when process name not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"create\",\n\n \"unit_num\":\"{{unit_num}}\",\n\n \"stage\": \"Billet punching\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when unity name not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"create\",\n \"process_name\": \"{{process}}\",\n\n\n \"stage\": \"Billet punching\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-stage-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when stage name not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"create\",\n \"process_name\": \"{{process}}\",\n \"unit_num\":\"{{unit_num}}\"\n\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_request",
					"item": [
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_request\",\r\n \"resolver_id\": \"628787de55d104aab2fcc695\",\r\n \"task_state\": [\"REQUESTED\"]\r\n \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-resolver-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when resolver id not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"get_request\",\n \"task_state\": [\"REQUESTED\"]\n \n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-task-state-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when task state not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"get_request\",\n \"resolver_id\": \"628787de55d104aab2fcc695\"\n \n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "miss-task-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update\",\r\n \r\n \"task_state\": \"FULFILLED\",\r\n \"resolver_id\": \"628787de55d104aab2fcc695\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-task-state-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when task stae not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"update\",\n \n\n \"resolver_id\": \"628787de55d104aab2fcc695\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-reslover-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"",
											"    pm.response.to.have.status(422);",
											"",
											"});",
											"",
											"var json=JSON.parse(responseBody)",
											"pm.test(\"valiadte error message when resolver id not given \",()=>{",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"op\": \"update\",\n \n \"task_state\": \"FULFILLED\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "remove_request",
					"item": [
						{
							"name": "miss-task-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when task id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"operator-task-service:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"op\": \"remove_request\"\r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/operator-task-service",
									"host": [
										"{{url}}"
									],
									"path": [
										"operator-task-service"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Rejection",
			"item": [
				{
					"name": "update_rejection",
					"item": [
						{
							"name": "miss-stage-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when stage name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_rejection\",\r\n \"process_name\": \"{{process}}\",\r\n \"unit_num\":\"{{unit_num}}\",\r\n \r\n \"rejections\": {\r\n \"Substation rejection\": {\r\n \"Buster\": {\r\n \"reason 1 for Buster\": 100\r\n }\r\n }\r\n }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when process name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_rejection\",\r\n\r\n \"unit_num\":\"{{unit_num}}\",\r\n \r\n \"rejections\": {\r\n \"Substation rejection\": {\r\n \"Buster\": {\r\n \"reason 1 for Buster\": 100\r\n }\r\n }\r\n }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-rejection-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when rejections are not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_rejection\",\r\n \"process_name\": \"{{process}}\",\r\n \"unit_num\":\"{{unit_num}}\"\r\n \r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"update_rejection\",\r\n \"process_name\": \"{{process}}\",\r\n\r\n \r\n \"rejections\": {\r\n \"Substation rejection\": {\r\n \"Buster\": {\r\n \"reason 1 for Buster\": 100\r\n }\r\n }\r\n }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "run_rejection",
					"item": [
						{
							"name": "miss-process-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when process name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_rejections\", \r\n\r\n \r\n \"stage_name\": \"Billet punching\",\r\n \"unit_num\": \"{{unit_num}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-stage-name-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when stage name not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_rejections\", \r\n\r\n \r\n \r\n \"unit_num\": \"{{unit_num}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						},
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"get_rejections\", \r\n\r\n \r\n \"stage_name\": \"Billet punching\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"rejection"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Batch rejection reasons",
			"item": [
				{
					"name": "add_batch_reason",
					"item": [
						{
							"name": "miss-rejection-reason-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"batch-rejections:invalid-params\")\r",
											"});\r",
											"\r",
											"\r",
											"var res = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set(\"rej_reason_id\", res.message._id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"add_batch_reason\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/batch-rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"batch-rejection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get_batch_reason",
					"item": [
						{
							"name": "miss-opcode-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when opcode not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"batch-rejections:invalid-opcode\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/batch-rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"batch-rejection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "remove_batch_reason",
					"item": [
						{
							"name": "miss-id-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when id not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"batch-rejections:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n \"op\": \"remove_batch_reason\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/batch-rejection",
									"host": [
										"{{url}}"
									],
									"path": [
										"batch-rejection"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Compartments",
			"item": [
				{
					"name": "get_compartments",
					"item": [
						{
							"name": "miss-unit-num-field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"\r",
											"    pm.response.to.have.status(422);\r",
											"\r",
											"});\r",
											"\r",
											"var json=JSON.parse(responseBody)\r",
											"pm.test(\"valiadte error message when unit num not given \",()=>{\r",
											"pm.expect(json.message).to.eql(\"rejection:invalid-params\")\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"op\": \"get_compartments\"\r\n \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/compartment",
									"host": [
										"{{url}}"
									],
									"path": [
										"compartment"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}